name: ci-build-and-push

on:
  push:
    branches:
      - master
      - dev
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

env:
  OWNER: ${{ github.repository_owner }}
  IMAGE_NAME: cargo-hub
  DOCKERFILE: CargoHub.Api/Dockerfile
  CONTEXT: .

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore / Build
        run: |
          dotnet restore ./CargoHub.Api
          dotnet build ./CargoHub.Api -c Release --no-restore
          # testlerin varsa:
          # dotnet test ./tests -c Release --no-build

      - name: Compute lower-case owner
        run: echo "OWNER_LC=${OWNER,,}" >> $GITHUB_ENV

      - name: Docker meta (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.OWNER_LC }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha
            type=ref,event=branch
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Login to GHCR (skip on PR)
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build (PR) / Build and Push (non-PR)
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.CONTEXT }}
          file: ${{ env.DOCKERFILE }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
